[
  {
    "function": [
      "function add(a, b)\n    return a + b\nend"
    ]
  },
  {
    "function": [
      "local function subtract(a, b)\n    return a - b\nend"
    ]
  },
  {
    "function": [
      "function(a, b)\n    return a * b\nend"
    ]
  },
  {
    "function": [
      "function divmod(a, b)\n    return math.floor(a/b), a % b\nend"
    ]
  },
  {
    "function": [
      "function sum(...)\n    local result = 0\n    for _, v in ipairs({...}) do\n        result = result + v\n    end\n    return result\nend"
    ]
  },
  {
    "function": [
      "function(self, x)\n        self.value = self.value + x\n    end"
    ]
  },
  {
    "function": [
      "function(self, x)\n        self.value = self.value - x\n    end"
    ]
  },
  {
    "function": [
      "function Calculator:multiply(x)\n    self.value = self.value * x\nend"
    ]
  },
  {
    "function": [
      "local function createPerson(name)\n    local person = {\n        name = name,\n        \n        -- Method\n        greet = function(self)\n            return \"Hello, I'm \" .. self.name\n        end\n    }\n    \n    -- Return the instance\n    return person\nend"
    ]
  },
  {
    "function": [
      "function(self)\n            return \"Hello, I'm \" .. self.name\n        end"
    ]
  },
  {
    "function": [
      "function counter()\n    local count = 0\n    return function()\n        count = count + 1\n        return count\n    end\nend"
    ]
  },
  {
    "function": [
      "function()\n        count = count + 1\n        return count\n    end"
    ]
  },
  {
    "function": [
      "function makeOperations()\n    return function(x) return x + 1 end,\n           function(x) return x - 1 end\nend"
    ]
  },
  {
    "function": [
      "function(x) return x + 1 end"
    ]
  },
  {
    "function": [
      "function(x) return x - 1 end"
    ]
  },
  {
    "function": [
      "local function main()\n    -- Test regular function\n    print(add(5, 3))\n    \n    -- Test calculator\n    Calculator:add(10)\n    print(Calculator.value)\n    \n    -- Test person\n    local person = createPerson(\"Alice\")\n    print(person:greet())\n    \n    -- Test counter\n    local count = counter()\n    print(count())\n    print(count())\nend"
    ]
  }
]