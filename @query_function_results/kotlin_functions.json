[
  {
    "function": [
      "fun add(a: Int, b: Int): Int = a + b"
    ]
  },
  {
    "function": [
      "fun greet(name: String = \"World\") = \"Hello, $name!\""
    ]
  },
  {
    "function": [
      "fun createUser(name: String, age: Int, email: String? = null) =\n    mapOf(\"name\" to name, \"age\" to age, \"email\" to email)"
    ]
  },
  {
    "function": [
      "fun String.addExclamation() = \"$this!\""
    ]
  },
  {
    "function": [
      "infix fun Int.times(str: String) = str.repeat(this)"
    ]
  },
  {
    "function": [
      "operator fun Int.plus(other: Int) = this + other"
    ]
  },
  {
    "function": [
      "fun operation(x: Int, y: Int, op: (Int, Int) -> Int): Int = op(x, y)"
    ]
  },
  {
    "function": [
      "{ x: Int, y: Int -> x * y }"
    ]
  },
  {
    "function": [
      "suspend fun fetchData(): String {\n    return \"Data\"\n}"
    ]
  },
  {
    "function": [
      "fun add(x: Int) {\n        value += x\n    }"
    ]
  },
  {
    "function": [
      "fun multiply(x: Int, y: Int) = x * y"
    ]
  },
  {
    "function": [
      "fun makeSound(): String"
    ]
  },
  {
    "function": [
      "fun move() {\n        println(\"Moving...\")\n    }"
    ]
  },
  {
    "function": [
      "override fun makeSound() = \"Woof!\""
    ]
  },
  {
    "function": [
      "fun birthday() {\n        age++\n    }"
    ]
  },
  {
    "function": [
      "fun <T> printArray(array: Array<T>) {\n    array.forEach { println(it) }\n}"
    ]
  },
  {
    "function": [
      "{ println(it) }"
    ]
  },
  {
    "function": [
      "fun Int.squared(): Int = this * this"
    ]
  },
  {
    "function": [
      "fun processPerson(person: Person) {\n    person.apply {\n        age += 1\n        println(\"Happy birthday, $name!\")\n    }\n}"
    ]
  },
  {
    "function": [
      "{\n        age += 1\n        println(\"Happy birthday, $name!\")\n    }"
    ]
  },
  {
    "function": [
      "fun main() {\n    val result = add(5, 3)\n    println(\"Result: $result\")\n\n    val person = Person(\"Alice\", 30)\n    processPerson(person)\n}"
    ]
  }
]