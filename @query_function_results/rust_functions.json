[
  {
    "function": [
      "fn add(a: i32, b: i32) -> i32 {\n    a + b\n}"
    ]
  },
  {
    "function": [
      "fn print_value<T: std::fmt::Display>(value: T) {\n    println!(\"{}\", value);\n}"
    ]
  },
  {
    "function": [
      "async fn fetch_data() -> Result<String, std::io::Error> {\n    Ok(String::from(\"data\"))\n}"
    ]
  },
  {
    "function": [
      "fn longest<'a>(x: &'a str, y: &'a str) -> &'a str {\n    if x.len() > y.len() { x } else { y }\n}"
    ]
  },
  {
    "function": [
      "fn default_behavior(&self) -> String {\n        String::from(\"some default behavior\")\n    }"
    ]
  },
  {
    "function": [
      "fn new(name: String) -> Dog {\n        Dog { name }\n    }"
    ]
  },
  {
    "function": [
      "fn bark(&self) -> String {\n        format!(\"{} says: Woof!\", self.name)\n    }"
    ]
  },
  {
    "function": [
      "fn make_sound(&self) -> String {\n        self.bark()\n    }"
    ]
  },
  {
    "function": [
      "|x: i32, y: i32| x * y"
    ]
  },
  {
    "function": [
      "fn apply_operation<F>(x: i32, y: i32, operation: F) -> i32 \nwhere F: Fn(i32, i32) -> i32 \n{\n    operation(x, y)\n}"
    ]
  },
  {
    "function": [
      "fn main() {\n    let result = add(5, 3);\n    println!(\"Result: {}\", result);\n    \n    let dog = Dog::new(String::from(\"Rover\"));\n    println!(\"{}\", dog.bark());\n}"
    ]
  }
]