@startuml github_analyzer_architecture

' Styling
skinparam componentStyle uml2
skinparam backgroundColor white
skinparam monochrome true

package "GithubAnalyzer" {
    ' Core Layer
    package "Core" {
        package "Models" {
            component [errors.py] as EM
            component [file.py] as FM
            component [ast.py] as AST
            
            note right of EM
                Simplified Error Hierarchy:
                ParserError
                ├── LanguageError
                └── QueryError
                FileOperationError
            end note
        }
        
        package "Services" {
            component [file_service.py] as FS
            component [parser_service.py] as PS
        }

        package "Config" {
            component [settings.py] as SET
            component [language_config.py] as LC
            component [logging_config.py] as LOG
        }

        package "Utils" {
            component [logging.py] as LG
            component [timing.py] as TM
        }
    }

    ' Analysis Layer
    package "Analysis" {
        package "Models" {
            component [tree_sitter.py] as TSM
        }
        
        package "Services" {
            package "Parsers" {
                component [tree_sitter_query.py] as TSQ
                component [tree_sitter_traversal.py] as TST
                component [query_patterns.py] as QP
            }
        }
    }

    ' Dependencies
    FS --> FM : uses file models
    PS --> AST : uses AST models
    PS --> "tree-sitter-language-pack" : uses directly
    TSQ --> "tree-sitter-language-pack" : uses directly
    TSQ --> TST : uses traversal
    TSQ --> QP : uses patterns
    LC --> "tree-sitter-language-pack" : uses for extension mapping

    ' Error Usage Dependencies
    FS ..> EM : throws FileOperationError
    PS ..> EM : throws ParserError
    TSQ ..> EM : throws QueryError

    ' Logging Usage
    FS --> LG : uses logging
    PS --> LG : uses logging
    TSQ --> LG : uses logging

    ' Timer Usage
    PS ..> TM : uses timing
    TSQ ..> TM : uses timing

    note right of Core
        Core layer provides fundamental models,
        services, configuration and utilities.
        Directly uses tree-sitter-language-pack.
    end note

    note right of Analysis
        Analysis layer provides specialized query
        and traversal utilities on top of tree-sitter.
        No intermediate abstractions.
    end note

    note right of PS
        ParserService directly uses tree-sitter-language-pack for:
        - Language initialization
        - Parser management
        - Language detection
        No intermediate abstraction layer needed.
    end note

    note right of TSQ
        TreeSitterQuery provides:
        - Query caching
        - Error handling
        - Pattern management
        Direct use of tree-sitter Query API.
    end note
}

@enduml 